@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://purl.org/ontology/vamp/> .
@prefix plugbase: <http://vamp-plugins.org/rdf/plugins/vamp-libxtract#> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix dc:       <http://purl.org/dc/elements/1.1/> .
@prefix af:       <http://purl.org/ontology/af/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix cc:       <http://web.resource.org/cc/> .
@prefix :         <> .

<>  a   vamp:PluginDescription ;
    foaf:maker          <http://www.vamp-plugins.org/doap.rdf#template-generator> ;
    foaf:primaryTopic   <http://vamp-plugins.org/rdf/plugins/vamp-libxtract> .

:vamp-libxtract a  vamp:PluginLibrary ;
    vamp:identifier "vamp-libxtract"  ; 
    vamp:available_plugin plugbase:amdf ; 
    vamp:available_plugin plugbase:asdf ; 
    vamp:available_plugin plugbase:autocorrelation ; 
    vamp:available_plugin plugbase:average_deviation ; 
    vamp:available_plugin plugbase:bark_coefficients ; 
    vamp:available_plugin plugbase:crest ; 
    vamp:available_plugin plugbase:dct ; 
    vamp:available_plugin plugbase:f0 ; 
    vamp:available_plugin plugbase:failsafe_f0 ; 
    vamp:available_plugin plugbase:flatness ; 
    vamp:available_plugin plugbase:harmonic_spectrum ; 
    vamp:available_plugin plugbase:highest_value ; 
    vamp:available_plugin plugbase:irregularity_j ; 
    vamp:available_plugin plugbase:irregularity_k ; 
    vamp:available_plugin plugbase:kurtosis ; 
    vamp:available_plugin plugbase:loudness ; 
    vamp:available_plugin plugbase:lowest_value ; 
    vamp:available_plugin plugbase:mean ; 
    vamp:available_plugin plugbase:mfcc ; 
    vamp:available_plugin plugbase:noisiness ; 
    vamp:available_plugin plugbase:nonzero_count ; 
    vamp:available_plugin plugbase:odd_even_ratio ; 
    vamp:available_plugin plugbase:peak_spectrum ; 
    vamp:available_plugin plugbase:rms_amplitude ; 
    vamp:available_plugin plugbase:rolloff ; 
    vamp:available_plugin plugbase:sharpness ; 
    vamp:available_plugin plugbase:skewness ; 
    vamp:available_plugin plugbase:smoothness ; 
    vamp:available_plugin plugbase:spectral_average_deviation ; 
    vamp:available_plugin plugbase:spectral_centroid ; 
    vamp:available_plugin plugbase:spectral_inharmonicity ; 
    vamp:available_plugin plugbase:spectral_kurtosis ; 
    vamp:available_plugin plugbase:spectral_skewness ; 
    vamp:available_plugin plugbase:spectral_slope ; 
    vamp:available_plugin plugbase:spectral_standard_deviation ; 
    vamp:available_plugin plugbase:spectral_variance ; 
    vamp:available_plugin plugbase:spectrum ; 
    vamp:available_plugin plugbase:spread ; 
    vamp:available_plugin plugbase:standard_deviation ; 
    vamp:available_plugin plugbase:sum ; 
    vamp:available_plugin plugbase:tonality ; 
    vamp:available_plugin plugbase:tristimulus_1 ; 
    vamp:available_plugin plugbase:tristimulus_2 ; 
    vamp:available_plugin plugbase:tristimulus_3 ; 
    vamp:available_plugin plugbase:variance ; 
    vamp:available_plugin plugbase:zcr ; 
#   foaf:page <Place more-information HTML page URL here and uncomment> ;
    .

plugbase:amdf a   vamp:Plugin ;
    dc:title              "Average Magnitude Difference Function" ;
    vamp:name             "Average Magnitude Difference Function" ;
    dc:description        """Extract the AMDF of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "amdf" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:amdf_output_amdf ;
    .
plugbase:amdf_output_amdf a  vamp:DenseOutput ;
    vamp:identifier       "amdf" ;
    dc:title              "Average Magnitude Difference Function" ;
    dc:description        "Extract the AMDF of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:asdf a   vamp:Plugin ;
    dc:title              "Average Squared Difference Function" ;
    vamp:name             "Average Squared Difference Function" ;
    dc:description        """Extract the ASDF of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "asdf" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:asdf_output_asdf ;
    .
plugbase:asdf_output_asdf a  vamp:DenseOutput ;
    vamp:identifier       "asdf" ;
    dc:title              "Average Squared Difference Function" ;
    dc:description        "Extract the ASDF of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:autocorrelation a   vamp:Plugin ;
    dc:title              "Autocorrelation" ;
    vamp:name             "Autocorrelation" ;
    dc:description        """Extract the autocorrelation of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "autocorrelation" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:autocorrelation_output_autocorrelation ;
    .
plugbase:autocorrelation_output_autocorrelation a  vamp:DenseOutput ;
    vamp:identifier       "autocorrelation" ;
    dc:title              "Autocorrelation" ;
    dc:description        "Extract the autocorrelation of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:average_deviation a   vamp:Plugin ;
    dc:title              "Average Deviation" ;
    vamp:name             "Average Deviation" ;
    dc:description        """Extract the average deviation of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "average_deviation" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:average_deviation_output_average_deviation ;
    .
plugbase:average_deviation_output_average_deviation a  vamp:DenseOutput ;
    vamp:identifier       "average_deviation" ;
    dc:title              "Average Deviation" ;
    dc:description        "Extract the average deviation of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:bark_coefficients a   vamp:Plugin ;
    dc:title              "Bark Coefficients" ;
    vamp:name             "Bark Coefficients" ;
    dc:description        """Extract bark coefficients from an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "bark_coefficients" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:bark_coefficients_output_bark_coefficients ;
    .
plugbase:bark_coefficients_output_bark_coefficients a  vamp:DenseOutput ;
    vamp:identifier       "bark_coefficients" ;
    dc:title              "Bark Coefficients" ;
    dc:description        "Extract bark coefficients from an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:crest a   vamp:Plugin ;
    dc:title              "Spectral Crest Measure" ;
    vamp:name             "Spectral Crest Measure" ;
    dc:description        """Extract the spectral crest measure of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Peeters (2003). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "crest" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:crest_output_crest ;
    .
plugbase:crest_output_crest a  vamp:DenseOutput ;
    vamp:identifier       "crest" ;
    dc:title              "Spectral Crest Measure" ;
    dc:description        "Extract the spectral crest measure of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:dct a   vamp:Plugin ;
    dc:title              "Discrete Cosine Transform" ;
    vamp:name             "Discrete Cosine Transform" ;
    dc:description        """Extract the DCT of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "dct" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:dct_output_dct ;
    .
plugbase:dct_output_dct a  vamp:DenseOutput ;
    vamp:identifier       "dct" ;
    dc:title              "Discrete Cosine Transform" ;
    dc:description        "Extract the DCT of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:f0 a   vamp:Plugin ;
    dc:title              "Fundamental Frequency" ;
    vamp:name             "Fundamental Frequency" ;
    dc:description        """Extract the fundamental frequency of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Jamie Bullock. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "f0" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:f0_output_f0 ;
    .
plugbase:f0_output_f0 a  vamp:DenseOutput ;
    vamp:identifier       "f0" ;
    dc:title              "Fundamental Frequency" ;
    dc:description        "Extract the fundamental frequency of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:failsafe_f0 a   vamp:Plugin ;
    dc:title              "Fundamental Frequency (failsafe)" ;
    vamp:name             "Fundamental Frequency (failsafe)" ;
    dc:description        """Extract the fundamental frequency of an audio signal (failsafe)""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Jamie Bullock. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "failsafe_f0" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:failsafe_f0_output_failsafe_f0 ;
    .
plugbase:failsafe_f0_output_failsafe_f0 a  vamp:DenseOutput ;
    vamp:identifier       "failsafe_f0" ;
    dc:title              "Fundamental Frequency (failsafe)" ;
    dc:description        "Extract the fundamental frequency of an audio signal (failsafe)"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:flatness a   vamp:Plugin ;
    dc:title              "Spectral Flatness" ;
    vamp:name             "Spectral Flatness" ;
    dc:description        """Extract the spectral flatness of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Tristan Jehan (2005). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "flatness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:flatness_output_flatness ;
    .
plugbase:flatness_output_flatness a  vamp:DenseOutput ;
    vamp:identifier       "flatness" ;
    dc:title              "Spectral Flatness" ;
    dc:description        "Extract the spectral flatness of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:harmonic_spectrum a   vamp:Plugin ;
    dc:title              "Harmonic Spectrum" ;
    vamp:name             "Harmonic Spectrum" ;
    dc:description        """Extract the harmonics from an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "harmonic_spectrum" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:harmonic_spectrum_param_peak-threshold ;
    vamp:parameter   plugbase:harmonic_spectrum_param_harmonic-threshold ;

    vamp:output      plugbase:harmonic_spectrum_output_amplitudes ;
    .
plugbase:harmonic_spectrum_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:harmonic_spectrum_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:harmonic_spectrum_output_amplitudes a  vamp:DenseOutput ;
    vamp:identifier       "amplitudes" ;
    dc:title              "Peak Amplitudes" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:highest_value a   vamp:Plugin ;
    dc:title              "Highest Value" ;
    vamp:name             "Highest Value" ;
    dc:description        """Extract the highest value from a given range""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "highest_value" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:highest_value_output_highest_value ;
    .
plugbase:highest_value_output_highest_value a  vamp:DenseOutput ;
    vamp:identifier       "highest_value" ;
    dc:title              "Highest Value" ;
    dc:description        "Extract the highest value from a given range"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:irregularity_j a   vamp:Plugin ;
    dc:title              "Irregularity II" ;
    vamp:name             "Irregularity II" ;
    dc:description        """Extract the irregularity (type II) of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Jensen (1999). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "irregularity_j" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:irregularity_j_output_irregularity_j ;
    .
plugbase:irregularity_j_output_irregularity_j a  vamp:DenseOutput ;
    vamp:identifier       "irregularity_j" ;
    dc:title              "Irregularity II" ;
    dc:description        "Extract the irregularity (type II) of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:irregularity_k a   vamp:Plugin ;
    dc:title              "Irregularity I" ;
    vamp:name             "Irregularity I" ;
    dc:description        """Extract the irregularity (type I) of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Krimphoff (1994). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "irregularity_k" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:irregularity_k_output_irregularity_k ;
    .
plugbase:irregularity_k_output_irregularity_k a  vamp:DenseOutput ;
    vamp:identifier       "irregularity_k" ;
    dc:title              "Irregularity I" ;
    dc:description        "Extract the irregularity (type I) of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:kurtosis a   vamp:Plugin ;
    dc:title              "Kurtosis" ;
    vamp:name             "Kurtosis" ;
    dc:description        """Extract the kurtosis of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "kurtosis" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:kurtosis_output_kurtosis ;
    .
plugbase:kurtosis_output_kurtosis a  vamp:DenseOutput ;
    vamp:identifier       "kurtosis" ;
    dc:title              "Kurtosis" ;
    dc:description        "Extract the kurtosis of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:loudness a   vamp:Plugin ;
    dc:title              "Loudness" ;
    vamp:name             "Loudness" ;
    dc:description        """Extract the loudness of an audio signal from its spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Moore, Glasberg et al (2005). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "loudness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:loudness_output_loudness ;
    .
plugbase:loudness_output_loudness a  vamp:DenseOutput ;
    vamp:identifier       "loudness" ;
    dc:title              "Loudness" ;
    dc:description        "Extract the loudness of an audio signal from its spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:lowest_value a   vamp:Plugin ;
    dc:title              "Lowest Value" ;
    vamp:name             "Lowest Value" ;
    dc:description        """Extract the lowest value from a given range""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "lowest_value" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:lowest_value_output_lowest_value ;
    .
plugbase:lowest_value_output_lowest_value a  vamp:DenseOutput ;
    vamp:identifier       "lowest_value" ;
    dc:title              "Lowest Value" ;
    dc:description        "Extract the lowest value from a given range"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mean a   vamp:Plugin ;
    dc:title              "Mean" ;
    vamp:name             "Mean" ;
    dc:description        """Extract the mean of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mean" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:mean_output_mean ;
    .
plugbase:mean_output_mean a  vamp:DenseOutput ;
    vamp:identifier       "mean" ;
    dc:title              "Mean" ;
    dc:description        "Extract the mean of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:mfcc a   vamp:Plugin ;
    dc:title              "Mel-Frequency Cepstral Coefficients" ;
    vamp:name             "Mel-Frequency Cepstral Coefficients" ;
    dc:description        """Extract MFCC from an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Rabiner. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "mfcc" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:mfcc_param_minfreq ;
    vamp:parameter   plugbase:mfcc_param_maxfreq ;
    vamp:parameter   plugbase:mfcc_param_bands ;
    vamp:parameter   plugbase:mfcc_param_lowestcoef ;
    vamp:parameter   plugbase:mfcc_param_highestcoef ;
    vamp:parameter   plugbase:mfcc_param_style ;

    vamp:output      plugbase:mfcc_output_mfcc ;
    .
plugbase:mfcc_param_minfreq a  vamp:Parameter ;
    vamp:identifier     "minfreq" ;
    dc:title            "Minimum Frequency" ;
    dc:format           "Hz" ;
    vamp:min_value       0 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   80 ;
    vamp:value_names     ();
    .
plugbase:mfcc_param_maxfreq a  vamp:Parameter ;
    vamp:identifier     "maxfreq" ;
    dc:title            "Maximum Frequency" ;
    dc:format           "Hz" ;
    vamp:min_value       0 ;
    vamp:max_value       24000 ;
    vamp:unit           "Hz"  ;
    vamp:default_value   18000 ;
    vamp:value_names     ();
    .
plugbase:mfcc_param_bands a  vamp:QuantizedParameter ;
    vamp:identifier     "bands" ;
    dc:title            "# Mel Frequency Bands" ;
    dc:format           "" ;
    vamp:min_value       10 ;
    vamp:max_value       80 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   40 ;
    vamp:value_names     ();
    .
plugbase:mfcc_param_lowestcoef a  vamp:QuantizedParameter ;
    vamp:identifier     "lowestcoef" ;
    dc:title            "Lowest Coefficient Returned" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       80 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ();
    .
plugbase:mfcc_param_highestcoef a  vamp:QuantizedParameter ;
    vamp:identifier     "highestcoef" ;
    dc:title            "Highest Coefficient Returned" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       80 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   20 ;
    vamp:value_names     ();
    .
plugbase:mfcc_param_style a  vamp:QuantizedParameter ;
    vamp:identifier     "style" ;
    dc:title            "MFCC Type" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           "" ;
    vamp:quantize_step   1  ;
    vamp:default_value   0 ;
    vamp:value_names     ( "Equal Gain" "Equal Area");
    .
plugbase:mfcc_output_mfcc a  vamp:DenseOutput ;
    vamp:identifier       "mfcc" ;
    dc:title              "Mel-Frequency Cepstral Coefficients" ;
    dc:description        "Extract MFCC from an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:noisiness a   vamp:Plugin ;
    dc:title              "Noisiness" ;
    vamp:name             "Noisiness" ;
    dc:description        """Extract the noisiness of an audio  spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Tae Hong Park (2000). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "noisiness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:noisiness_param_peak-threshold ;
    vamp:parameter   plugbase:noisiness_param_harmonic-threshold ;

    vamp:output      plugbase:noisiness_output_noisiness ;
    .
plugbase:noisiness_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:noisiness_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:noisiness_output_noisiness a  vamp:DenseOutput ;
    vamp:identifier       "noisiness" ;
    dc:title              "Noisiness" ;
    dc:description        "Extract the noisiness of an audio  spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:nonzero_count a   vamp:Plugin ;
    dc:title              "Non-zero count" ;
    vamp:name             "Non-zero count" ;
    dc:description        """Extract the number of non-zero elements in an input spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "nonzero_count" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:nonzero_count_param_peak-threshold ;

    vamp:output      plugbase:nonzero_count_output_nonzero_count ;
    .
plugbase:nonzero_count_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:nonzero_count_output_nonzero_count a  vamp:DenseOutput ;
    vamp:identifier       "nonzero_count" ;
    dc:title              "Non-zero count" ;
    dc:description        "Extract the number of non-zero elements in an input spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:odd_even_ratio a   vamp:Plugin ;
    dc:title              "Odd/even Harmonic Ratio" ;
    vamp:name             "Odd/even Harmonic Ratio" ;
    dc:description        """Extract the odd-to-even harmonic ratio of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "odd_even_ratio" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:odd_even_ratio_param_peak-threshold ;
    vamp:parameter   plugbase:odd_even_ratio_param_harmonic-threshold ;

    vamp:output      plugbase:odd_even_ratio_output_odd_even_ratio ;
    .
plugbase:odd_even_ratio_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:odd_even_ratio_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:odd_even_ratio_output_odd_even_ratio a  vamp:DenseOutput ;
    vamp:identifier       "odd_even_ratio" ;
    dc:title              "Odd/even Harmonic Ratio" ;
    dc:description        "Extract the odd-to-even harmonic ratio of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:peak_spectrum a   vamp:Plugin ;
    dc:title              "Peak Spectrum" ;
    vamp:name             "Peak Spectrum" ;
    dc:description        """Extract the spectral peaks from an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "peak_spectrum" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:peak_spectrum_param_peak-threshold ;

    vamp:output      plugbase:peak_spectrum_output_amplitudes ;
    .
plugbase:peak_spectrum_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:peak_spectrum_output_amplitudes a  vamp:DenseOutput ;
    vamp:identifier       "amplitudes" ;
    dc:title              "Peak Amplitudes" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:rms_amplitude a   vamp:Plugin ;
    dc:title              "RMS Amplitude" ;
    vamp:name             "RMS Amplitude" ;
    dc:description        """Extract the RMS amplitude of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "rms_amplitude" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:rms_amplitude_output_rms_amplitude ;
    .
plugbase:rms_amplitude_output_rms_amplitude a  vamp:DenseOutput ;
    vamp:identifier       "rms_amplitude" ;
    dc:title              "RMS Amplitude" ;
    dc:description        "Extract the RMS amplitude of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:rolloff a   vamp:Plugin ;
    dc:title              "Spectral Rolloff" ;
    vamp:name             "Spectral Rolloff" ;
    dc:description        """Extract the rolloff point of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Bee Suan Ong (2005). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "rolloff" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:rolloff_param_rolloff-threshold ;

    vamp:output      plugbase:rolloff_output_rolloff ;
    .
plugbase:rolloff_param_rolloff-threshold a  vamp:Parameter ;
    vamp:identifier     "rolloff-threshold" ;
    dc:title            "Rolloff Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   90 ;
    vamp:value_names     ();
    .
plugbase:rolloff_output_rolloff a  vamp:DenseOutput ;
    vamp:identifier       "rolloff" ;
    dc:title              "Spectral Rolloff" ;
    dc:description        "Extract the rolloff point of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:sharpness a   vamp:Plugin ;
    dc:title              "Spectral Sharpness" ;
    vamp:name             "Spectral Sharpness" ;
    dc:description        """Extract the spectral sharpness of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "sharpness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:sharpness_output_sharpness ;
    .
plugbase:sharpness_output_sharpness a  vamp:DenseOutput ;
    vamp:identifier       "sharpness" ;
    dc:title              "Spectral Sharpness" ;
    dc:description        "Extract the spectral sharpness of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:skewness a   vamp:Plugin ;
    dc:title              "Skewness" ;
    vamp:name             "Skewness" ;
    dc:description        """Extract the skewness of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "skewness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:skewness_output_skewness ;
    .
plugbase:skewness_output_skewness a  vamp:DenseOutput ;
    vamp:identifier       "skewness" ;
    dc:title              "Skewness" ;
    dc:description        "Extract the skewness of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:smoothness a   vamp:Plugin ;
    dc:title              "Spectral Smoothness" ;
    vamp:name             "Spectral Smoothness" ;
    dc:description        """Extract the spectral smoothness of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from McAdams (1999). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "smoothness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:smoothness_output_smoothness ;
    .
plugbase:smoothness_output_smoothness a  vamp:DenseOutput ;
    vamp:identifier       "smoothness" ;
    dc:title              "Spectral Smoothness" ;
    dc:description        "Extract the spectral smoothness of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_average_deviation a   vamp:Plugin ;
    dc:title              "Spectral Average Deviation" ;
    vamp:name             "Spectral Average Deviation" ;
    dc:description        """Extract the average deviation of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_average_deviation" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_average_deviation_output_spectral_average_deviation ;
    .
plugbase:spectral_average_deviation_output_spectral_average_deviation a  vamp:DenseOutput ;
    vamp:identifier       "spectral_average_deviation" ;
    dc:title              "Spectral Average Deviation" ;
    dc:description        "Extract the average deviation of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_centroid a   vamp:Plugin ;
    dc:title              "Spectral Centroid" ;
    vamp:name             "Spectral Centroid" ;
    dc:description        """Extract the spectral centroid of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_centroid" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_centroid_output_spectral_centroid ;
    .
plugbase:spectral_centroid_output_spectral_centroid a  vamp:DenseOutput ;
    vamp:identifier       "spectral_centroid" ;
    dc:title              "Spectral Centroid" ;
    dc:description        "Extract the spectral centroid of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_inharmonicity a   vamp:Plugin ;
    dc:title              "Inharmonicity" ;
    vamp:name             "Inharmonicity" ;
    dc:description        """Extract the inharmonicity of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_inharmonicity" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:spectral_inharmonicity_param_peak-threshold ;

    vamp:output      plugbase:spectral_inharmonicity_output_spectral_inharmonicity ;
    .
plugbase:spectral_inharmonicity_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:spectral_inharmonicity_output_spectral_inharmonicity a  vamp:DenseOutput ;
    vamp:identifier       "spectral_inharmonicity" ;
    dc:title              "Inharmonicity" ;
    dc:description        "Extract the inharmonicity of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_kurtosis a   vamp:Plugin ;
    dc:title              "Spectral Kurtosis" ;
    vamp:name             "Spectral Kurtosis" ;
    dc:description        """Extract the kurtosis of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_kurtosis" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_kurtosis_output_spectral_kurtosis ;
    .
plugbase:spectral_kurtosis_output_spectral_kurtosis a  vamp:DenseOutput ;
    vamp:identifier       "spectral_kurtosis" ;
    dc:title              "Spectral Kurtosis" ;
    dc:description        "Extract the kurtosis of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_skewness a   vamp:Plugin ;
    dc:title              "Spectral Skewness" ;
    vamp:name             "Spectral Skewness" ;
    dc:description        """Extract the skewness of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_skewness" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_skewness_output_spectral_skewness ;
    .
plugbase:spectral_skewness_output_spectral_skewness a  vamp:DenseOutput ;
    vamp:identifier       "spectral_skewness" ;
    dc:title              "Spectral Skewness" ;
    dc:description        "Extract the skewness of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_slope a   vamp:Plugin ;
    dc:title              "Spectral Slope" ;
    vamp:name             "Spectral Slope" ;
    dc:description        """Extract the spectral slope of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_slope" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_slope_output_spectral_slope ;
    .
plugbase:spectral_slope_output_spectral_slope a  vamp:DenseOutput ;
    vamp:identifier       "spectral_slope" ;
    dc:title              "Spectral Slope" ;
    dc:description        "Extract the spectral slope of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_standard_deviation a   vamp:Plugin ;
    dc:title              "Spectral Standard Deviation" ;
    vamp:name             "Spectral Standard Deviation" ;
    dc:description        """Extract the standard deviation of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_standard_deviation" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_standard_deviation_output_spectral_standard_deviation ;
    .
plugbase:spectral_standard_deviation_output_spectral_standard_deviation a  vamp:DenseOutput ;
    vamp:identifier       "spectral_standard_deviation" ;
    dc:title              "Spectral Standard Deviation" ;
    dc:description        "Extract the standard deviation of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectral_variance a   vamp:Plugin ;
    dc:title              "Spectral Variance" ;
    vamp:name             "Spectral Variance" ;
    dc:description        """Extract the variance of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectral_variance" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spectral_variance_output_spectral_variance ;
    .
plugbase:spectral_variance_output_spectral_variance a  vamp:DenseOutput ;
    vamp:identifier       "spectral_variance" ;
    dc:title              "Spectral Variance" ;
    dc:description        "Extract the variance of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spectrum a   vamp:Plugin ;
    dc:title              "Spectrum" ;
    vamp:name             "Spectrum" ;
    dc:description        """Extract the spectrum of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spectrum" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:spectrum_output_amplitudes ;
    .
plugbase:spectrum_output_amplitudes a  vamp:DenseOutput ;
    vamp:identifier       "amplitudes" ;
    dc:title              "Peak Amplitudes" ;
    dc:description        ""  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:spread a   vamp:Plugin ;
    dc:title              "Spectral Spread" ;
    vamp:name             "Spectral Spread" ;
    dc:description        """Extract the spectral spread of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Norman Casagrande (2005). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "spread" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:spread_output_spread ;
    .
plugbase:spread_output_spread a  vamp:DenseOutput ;
    vamp:identifier       "spread" ;
    dc:title              "Spectral Spread" ;
    dc:description        "Extract the spectral spread of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:standard_deviation a   vamp:Plugin ;
    dc:title              "Standard Deviation" ;
    vamp:name             "Standard Deviation" ;
    dc:description        """Extract the standard deviation of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "standard_deviation" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:standard_deviation_output_standard_deviation ;
    .
plugbase:standard_deviation_output_standard_deviation a  vamp:DenseOutput ;
    vamp:identifier       "standard_deviation" ;
    dc:title              "Standard Deviation" ;
    dc:description        "Extract the standard deviation of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:sum a   vamp:Plugin ;
    dc:title              "Sum of Values" ;
    vamp:name             "Sum of Values" ;
    dc:description        """Extract the sum of the values in a given range""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "sum" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:sum_output_sum ;
    .
plugbase:sum_output_sum a  vamp:DenseOutput ;
    vamp:identifier       "sum" ;
    dc:title              "Sum of Values" ;
    dc:description        "Extract the sum of the values in a given range"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:tonality a   vamp:Plugin ;
    dc:title              "Tonality" ;
    vamp:name             "Tonality" ;
    dc:description        """Extract the tonality an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from J. D. Johnston (1988). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "tonality" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:tonality_output_tonality ;
    .
plugbase:tonality_output_tonality a  vamp:DenseOutput ;
    vamp:identifier       "tonality" ;
    dc:title              "Tonality" ;
    dc:description        "Extract the tonality an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:tristimulus_1 a   vamp:Plugin ;
    dc:title              "Tristimulus I" ;
    vamp:name             "Tristimulus I" ;
    dc:description        """Extract the tristimulus (type I) of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Pollard and Jansson (1982). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "tristimulus_1" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:tristimulus_1_param_peak-threshold ;
    vamp:parameter   plugbase:tristimulus_1_param_harmonic-threshold ;

    vamp:output      plugbase:tristimulus_1_output_tristimulus_1 ;
    .
plugbase:tristimulus_1_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_1_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_1_output_tristimulus_1 a  vamp:DenseOutput ;
    vamp:identifier       "tristimulus_1" ;
    dc:title              "Tristimulus I" ;
    dc:description        "Extract the tristimulus (type I) of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:tristimulus_2 a   vamp:Plugin ;
    dc:title              "Tristimulus II" ;
    vamp:name             "Tristimulus II" ;
    dc:description        """Extract the tristimulus (type II) of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Pollard and Jansson (1982). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "tristimulus_2" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:tristimulus_2_param_peak-threshold ;
    vamp:parameter   plugbase:tristimulus_2_param_harmonic-threshold ;

    vamp:output      plugbase:tristimulus_2_output_tristimulus_2 ;
    .
plugbase:tristimulus_2_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_2_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_2_output_tristimulus_2 a  vamp:DenseOutput ;
    vamp:identifier       "tristimulus_2" ;
    dc:title              "Tristimulus II" ;
    dc:description        "Extract the tristimulus (type II) of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:tristimulus_3 a   vamp:Plugin ;
    dc:title              "Tristimulus III" ;
    vamp:name             "Tristimulus III" ;
    dc:description        """Extract the tristimulus (type III) of an audio spectrum""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Method from Pollard and Jansson (1982). Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "tristimulus_3" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;


    vamp:parameter   plugbase:tristimulus_3_param_peak-threshold ;
    vamp:parameter   plugbase:tristimulus_3_param_harmonic-threshold ;

    vamp:output      plugbase:tristimulus_3_output_tristimulus_3 ;
    .
plugbase:tristimulus_3_param_peak-threshold a  vamp:Parameter ;
    vamp:identifier     "peak-threshold" ;
    dc:title            "Peak Threshold" ;
    dc:format           "%" ;
    vamp:min_value       0 ;
    vamp:max_value       100 ;
    vamp:unit           "%"  ;
    vamp:default_value   10 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_3_param_harmonic-threshold a  vamp:Parameter ;
    vamp:identifier     "harmonic-threshold" ;
    dc:title            "Harmonic Threshold" ;
    dc:format           "" ;
    vamp:min_value       0 ;
    vamp:max_value       1 ;
    vamp:unit           ""  ;
    vamp:default_value   0.1 ;
    vamp:value_names     ();
    .
plugbase:tristimulus_3_output_tristimulus_3 a  vamp:DenseOutput ;
    vamp:identifier       "tristimulus_3" ;
    dc:title              "Tristimulus III" ;
    dc:description        "Extract the tristimulus (type III) of an audio spectrum"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:variance a   vamp:Plugin ;
    dc:title              "Variance" ;
    vamp:name             "Variance" ;
    dc:description        """Extract the variance of a range of values""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "variance" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:FrequencyDomain ;

    vamp:output      plugbase:variance_output_variance ;
    .
plugbase:variance_output_variance a  vamp:DenseOutput ;
    vamp:identifier       "variance" ;
    dc:title              "Variance" ;
    dc:description        "Extract the variance of a range of values"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .
plugbase:zcr a   vamp:Plugin ;
    dc:title              "Zero Crossing Rate" ;
    vamp:name             "Zero Crossing Rate" ;
    dc:description        """Extract the zero crossing rate of an audio signal""" ;
    foaf:maker            [ foaf:name "libxtract by Jamie Bullock (plugin by Chris Cannam)" ] ; # FIXME could give plugin author's URI here
    vamp:copyright_note   """Copyright 2006 Jamie Bullock, plugin Copyright 2006 Queen Mary, University of London. Distributed under the GNU General Public License""" ;
#   cc:license            <Place plugin license URI here and uncomment> ; 
    vamp:identifier       "zcr" ;
    vamp:vamp_API_version vamp:api_version_2 ;
    owl:versionInfo       "2" ;
    vamp:input_domain     vamp:TimeDomain ;
    vamp:output      plugbase:zcr_output_zcr ;
    .
plugbase:zcr_output_zcr a  vamp:DenseOutput ;
    vamp:identifier       "zcr" ;
    dc:title              "Zero Crossing Rate" ;
    dc:description        "Extract the zero crossing rate of an audio signal"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:unit             "Hz" ;
    vamp:bin_count        0 ;
    vamp:bin_names        ();
#   vamp:computes_event_type   <Place event type URI here and uncomment> ;
#   vamp:computes_feature      <Place feature attribute URI here and uncomment> ;
#   vamp:computes_signal_type  <Place signal type URI here and uncomment> ;
    .

